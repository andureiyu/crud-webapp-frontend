
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Group_session_participantsScalarFieldEnum = {
  participation_id: 'participation_id',
  group_session_id: 'group_session_id',
  student_id: 'student_id',
  registration_time: 'registration_time',
  payment_status: 'payment_status',
  attended: 'attended'
};

exports.Prisma.Group_sessionsScalarFieldEnum = {
  group_session_id: 'group_session_id',
  tutor_id: 'tutor_id',
  subject_id: 'subject_id',
  title: 'title',
  description: 'description',
  start_time: 'start_time',
  end_time: 'end_time',
  max_participants: 'max_participants',
  current_participants: 'current_participants',
  price_per_student: 'price_per_student',
  meeting_url: 'meeting_url',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.MessagesScalarFieldEnum = {
  message_id: 'message_id',
  sender_id: 'sender_id',
  recipient_id: 'recipient_id',
  content: 'content',
  sent_at: 'sent_at',
  read_at: 'read_at',
  attachment_url: 'attachment_url'
};

exports.Prisma.NotificationsScalarFieldEnum = {
  notification_id: 'notification_id',
  user_id: 'user_id',
  title: 'title',
  content: 'content',
  notification_type: 'notification_type',
  related_id: 'related_id',
  created_at: 'created_at',
  read_at: 'read_at',
  is_read: 'is_read'
};

exports.Prisma.PaymentsScalarFieldEnum = {
  payment_id: 'payment_id',
  session_id: 'session_id',
  amount: 'amount',
  payment_date: 'payment_date',
  payment_method: 'payment_method',
  transaction_id: 'transaction_id',
  status: 'status',
  platform_fee: 'platform_fee',
  tutor_payout: 'tutor_payout',
  payout_date: 'payout_date',
  refund_amount: 'refund_amount',
  refund_date: 'refund_date',
  refund_reason: 'refund_reason'
};

exports.Prisma.ResourcesScalarFieldEnum = {
  resource_id: 'resource_id',
  title: 'title',
  description: 'description',
  url: 'url',
  file_path: 'file_path',
  subject_id: 'subject_id',
  uploaded_by: 'uploaded_by',
  resource_type: 'resource_type',
  is_public: 'is_public',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Session_notesScalarFieldEnum = {
  note_id: 'note_id',
  session_id: 'session_id',
  author_id: 'author_id',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_private: 'is_private'
};

exports.Prisma.Session_ratingsScalarFieldEnum = {
  rating_id: 'rating_id',
  session_id: 'session_id',
  student_id: 'student_id',
  tutor_id: 'tutor_id',
  rating: 'rating',
  feedback: 'feedback',
  created_at: 'created_at'
};

exports.Prisma.Session_resourcesScalarFieldEnum = {
  session_resource_id: 'session_resource_id',
  session_id: 'session_id',
  resource_id: 'resource_id'
};

exports.Prisma.SessionsScalarFieldEnum = {
  session_id: 'session_id',
  tutor_id: 'tutor_id',
  student_id: 'student_id',
  subject_id: 'subject_id',
  start_time: 'start_time',
  end_time: 'end_time',
  duration_minutes: 'duration_minutes',
  hourly_rate: 'hourly_rate',
  session_cost: 'session_cost',
  status: 'status',
  meeting_url: 'meeting_url',
  notes: 'notes',
  materials_url: 'materials_url',
  created_at: 'created_at',
  canceled_at: 'canceled_at',
  cancellation_reason: 'cancellation_reason',
  cancellation_fee: 'cancellation_fee'
};

exports.Prisma.Student_subject_interestsScalarFieldEnum = {
  interest_id: 'interest_id',
  student_id: 'student_id',
  subject_id: 'subject_id',
  interest_level: 'interest_level'
};

exports.Prisma.StudentsScalarFieldEnum = {
  student_id: 'student_id',
  user_id: 'user_id',
  education_level: 'education_level',
  grade_year: 'grade_year',
  parent_guardian_name: 'parent_guardian_name',
  parent_guardian_email: 'parent_guardian_email',
  parent_guardian_phone: 'parent_guardian_phone',
  special_needs: 'special_needs',
  learning_preferences: 'learning_preferences'
};

exports.Prisma.Subject_categoriesScalarFieldEnum = {
  category_id: 'category_id',
  name: 'name',
  description: 'description'
};

exports.Prisma.SubjectsScalarFieldEnum = {
  subject_id: 'subject_id',
  category_id: 'category_id',
  name: 'name',
  description: 'description',
  difficulty_level: 'difficulty_level'
};

exports.Prisma.SubscriptionsScalarFieldEnum = {
  subscription_id: 'subscription_id',
  student_id: 'student_id',
  plan_name: 'plan_name',
  description: 'description',
  price: 'price',
  billing_cycle: 'billing_cycle',
  sessions_included: 'sessions_included',
  hours_included: 'hours_included',
  start_date: 'start_date',
  end_date: 'end_date',
  is_active: 'is_active',
  auto_renew: 'auto_renew',
  payment_method: 'payment_method',
  last_billing_date: 'last_billing_date',
  next_billing_date: 'next_billing_date'
};

exports.Prisma.Tutor_availabilityScalarFieldEnum = {
  availability_id: 'availability_id',
  tutor_id: 'tutor_id',
  day_of_week: 'day_of_week',
  start_time: 'start_time',
  end_time: 'end_time',
  is_recurring: 'is_recurring',
  specific_date: 'specific_date'
};

exports.Prisma.Tutor_subjectsScalarFieldEnum = {
  tutor_subject_id: 'tutor_subject_id',
  tutor_id: 'tutor_id',
  subject_id: 'subject_id',
  proficiency_level: 'proficiency_level',
  verified: 'verified'
};

exports.Prisma.TutorsScalarFieldEnum = {
  tutor_id: 'tutor_id',
  user_id: 'user_id',
  hourly_rate: 'hourly_rate',
  experience_years: 'experience_years',
  qualification: 'qualification',
  background_check_status: 'background_check_status',
  background_check_date: 'background_check_date',
  avg_rating: 'avg_rating',
  total_sessions: 'total_sessions',
  is_verified: 'is_verified',
  verification_date: 'verification_date',
  payment_details: 'payment_details'
};

exports.Prisma.UsersScalarFieldEnum = {
  user_id: 'user_id',
  email: 'email',
  password_hash: 'password_hash',
  first_name: 'first_name',
  last_name: 'last_name',
  phone: 'phone',
  date_of_birth: 'date_of_birth',
  profile_picture: 'profile_picture',
  bio: 'bio',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_active: 'is_active'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.group_session_participantsOrderByRelevanceFieldEnum = {
  payment_status: 'payment_status'
};

exports.Prisma.group_sessionsOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  meeting_url: 'meeting_url',
  status: 'status'
};

exports.Prisma.messagesOrderByRelevanceFieldEnum = {
  content: 'content',
  attachment_url: 'attachment_url'
};

exports.Prisma.notificationsOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content',
  notification_type: 'notification_type'
};

exports.Prisma.paymentsOrderByRelevanceFieldEnum = {
  payment_method: 'payment_method',
  transaction_id: 'transaction_id',
  status: 'status',
  refund_reason: 'refund_reason'
};

exports.Prisma.resourcesOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  url: 'url',
  file_path: 'file_path',
  resource_type: 'resource_type'
};

exports.Prisma.session_notesOrderByRelevanceFieldEnum = {
  content: 'content'
};

exports.Prisma.session_ratingsOrderByRelevanceFieldEnum = {
  feedback: 'feedback'
};

exports.Prisma.sessionsOrderByRelevanceFieldEnum = {
  status: 'status',
  meeting_url: 'meeting_url',
  notes: 'notes',
  materials_url: 'materials_url',
  cancellation_reason: 'cancellation_reason'
};

exports.Prisma.student_subject_interestsOrderByRelevanceFieldEnum = {
  interest_level: 'interest_level'
};

exports.Prisma.studentsOrderByRelevanceFieldEnum = {
  education_level: 'education_level',
  grade_year: 'grade_year',
  parent_guardian_name: 'parent_guardian_name',
  parent_guardian_email: 'parent_guardian_email',
  parent_guardian_phone: 'parent_guardian_phone',
  special_needs: 'special_needs',
  learning_preferences: 'learning_preferences'
};

exports.Prisma.subject_categoriesOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.subjectsOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  difficulty_level: 'difficulty_level'
};

exports.Prisma.subscriptionsOrderByRelevanceFieldEnum = {
  plan_name: 'plan_name',
  description: 'description',
  billing_cycle: 'billing_cycle',
  payment_method: 'payment_method'
};

exports.Prisma.tutor_subjectsOrderByRelevanceFieldEnum = {
  proficiency_level: 'proficiency_level'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.tutorsOrderByRelevanceFieldEnum = {
  qualification: 'qualification',
  background_check_status: 'background_check_status'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  email: 'email',
  password_hash: 'password_hash',
  first_name: 'first_name',
  last_name: 'last_name',
  phone: 'phone',
  profile_picture: 'profile_picture',
  bio: 'bio'
};


exports.Prisma.ModelName = {
  group_session_participants: 'group_session_participants',
  group_sessions: 'group_sessions',
  messages: 'messages',
  notifications: 'notifications',
  payments: 'payments',
  resources: 'resources',
  session_notes: 'session_notes',
  session_ratings: 'session_ratings',
  session_resources: 'session_resources',
  sessions: 'sessions',
  student_subject_interests: 'student_subject_interests',
  students: 'students',
  subject_categories: 'subject_categories',
  subjects: 'subjects',
  subscriptions: 'subscriptions',
  tutor_availability: 'tutor_availability',
  tutor_subjects: 'tutor_subjects',
  tutors: 'tutors',
  users: 'users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
